name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [main]

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  SCHEMA_VALIDATION_REPORT: schema-report.txt
  DATASET_VALIDATION_REPORT: dataset-report.txt
  SANITY_STUDIO_DATASET: ${{ vars.SANITY_STUDIO_DATASET }}

jobs:
  typecheck:
    name: Typecheck
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          cache: yarn
          node-version: 22
      - run: |
          yarn add -g corepack@0.20.0
          yarn install --frozen-lockfile

      - name: Typecheck
        run: yarn run typecheck

  validate-schema:
    environment:
      name: ci
    name: Validate Studio schema
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          cache: npm
          node-version: lts/*
      - run: yarn install --frozen-lockfile

      - name: Validate Studio schema
        id: validate
        run: |
          npx sanity schema validate >> ${{ env.SCHEMA_VALIDATION_REPORT }}
          exit_code=$?
          {
            echo "## Schema Validation Results"
            echo "\`\`\`"
            cat ${{ env.SCHEMA_VALIDATION_REPORT }}
            echo "\`\`\`"
          } >> $GITHUB_STEP_SUMMARY
          exit $exit_code

      - name: Post schema validation report
        uses: actions/github-script@v6
        if: failure() && steps.validate.outcome == 'failure'
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('${{ env.SCHEMA_VALIDATION_REPORT }}', 'utf8');
            const body = [
                '### ❌ Schema validation failed',
                '',
                `\`\`\`${report}\`\`\``,
            ].join('\n');

            await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body,
            });

  validate-dataset:
    environment:
      name: ci
    name: Validate dataset
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          cache: npm
          node-version: 22
      - run: yarn install --frozen-lockfile

      - name: Validate dataset
        id: validate
        run: |
          npx sanity documents validate --yes --level info >> ${{ env.DATASET_VALIDATION_REPORT }}
          exit_code=$?
          {
            echo "## Dataset Validation Results"
            echo "\`\`\`"
            cat ${{ env.DATASET_VALIDATION_REPORT }}
            echo "\`\`\`"
          } >> $GITHUB_STEP_SUMMARY
          exit $exit_code
        env:
          ## GOTCHA: a deploy token does not have permission to read documents
          ## and will succeed silenty as it will pull zero documents and validation
          ## will always pass, use a separate VIEWER token
          SANITY_AUTH_TOKEN: ${{ secrets.SANITY_AUTH_TOKEN_VIEWER }}

      - name: Post dataset validation report
        if: failure() && steps.validate.outcome == 'failure'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs'); 
            const report = fs.readFileSync('${{ env.DATASET_VALIDATION_REPORT }}', 'utf8');
            const body = [
                '### ❌ Dataset validation failed',
                '',
                `\`\`\`${report}\`\`\``,
            ].join('\n');

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            });
