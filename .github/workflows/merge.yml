name: Deploy Sanity Studio

permissions:
  contents: read
  pull-requests: write

on:
  push:
    branches:
      - master

env:
  SANITY_AUTH_TOKEN: ${{ secrets.SANITY_AUTH_TOKEN }}
  STUDIO_HOSTNAME: ${{ vars.STUDIO_HOSTNAME }}
  SANITY_STUDIO_DATASET: ${{ vars.SANITY_STUDIO_DATASET }}
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref_name }}-deploy

jobs:
  deploy-development:
    name: Deploy development
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ./studio
    environment:
      name: Development

    steps:
      - uses: actions/checkout@v4
      - run: corepack enable
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: yarn
      - run: yarn install --immutable

      - name: Set Studio hostname
        run: echo "SANITY_STUDIO_HOSTNAME=${STUDIO_HOSTNAME}-development" >> $GITHUB_ENV

      - name: Build and deploy Sanity Studio
        id: deploy
        run: |
          yarn deploy --yes --source-maps
          echo "STUDIO_URL=https://${SANITY_STUDIO_HOSTNAME}-development.sanity.studio" >> $GITHUB_OUTPUT

  deploy-production:
    name: Deploy production
    needs: [deploy-development]
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ./studio
    environment:
      name: Production

    steps:
      - uses: actions/checkout@v4
      - run: corepack enable

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: yarn
      - run: yarn install --immutable

      - name: Set Studio hostname
        run: echo "SANITY_STUDIO_HOSTNAME=${STUDIO_HOSTNAME}" >> $GITHUB_ENV

      - name: Build and deploy Sanity Studio
        id: deploy
        run: |
          yarn deploy --yes
          echo "STUDIO_URL=https://${SANITY_STUDIO_HOSTNAME}.sanity.studio" >> $GITHUB_OUTPUT

  ## App must first be deployed via the CLI, then app.id must be addded
  ## in the app's sanity.cli.ts file
  ## GOTCHA: the token must be created at the organisation level with read and deploy
  ## grants, a personal robot token will not suffice
  deploy-apps:
    name: Deploy applications
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - run: corepack enable
      - uses: dorny/paths-filter@v3.0.2
        id: changes
        with:
          filters: |
            feedback:
              - 'apps/app-feedback/**'
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: yarn
      - name: Deploy feedback app
        if: ${{ steps.changes.outputs.feedback == 'true' }}
        uses: ./deploy-app.yml
        with:
          name: feedback
          directory: ./apps/app-feedback
